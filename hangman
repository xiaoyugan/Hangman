#include<iostream>
#include<string>
using namespace std;

void Play(string &, string &, int &);
bool WantToContinue();
void GuessWord(string &, string &, int &);

int main()
{	
	string SecretWord;
	string ShowWord;

	do
	{
		int CurLife = 6;//if life=0, game over	
		Play(SecretWord, ShowWord, CurLife);
	}
	while (WantToContinue());

	system("pause");
	return 0;
}

void Play(string &SecretWord, string &ShowWord, int &CurLife)
{
	cout << "Please come up with a secret word" << endl;
	cin >> SecretWord;
	//first print_ _ _ _ _
	ShowWord = SecretWord;
	for (int i = 0; i < ShowWord.length(); i++)
	{
		ShowWord[i] = '_';
		cout << " " << ShowWord[i] << " ";
	}

	do
		GuessWord(SecretWord, ShowWord, CurLife);
	while (CurLife > 0 && SecretWord != ShowWord && WantToContinue());

	//if every letter is right-> win
	if (SecretWord == ShowWord)
	{
		cout << "\nyou win the game!" << endl;
	}
	else if (SecretWord != ShowWord)
	{
		cout << "\nyou lose the game!" << endl;
	}
}

bool WantToContinue()
{
	char answer;
	cout << "\n\nDo you want to continue(y/n)?" << endl;
	cin >> answer;
	return towlower(answer) == 'y';
}

void GuessWord(string &SecretWord, string &ShowWord, int &CurLife)
{
	cout << "\n\nPlease guess a letter" << endl;
	char GuessLetter;
	cin >> GuessLetter;

	for (int i = 0; i < SecretWord.length(); i++)
	{
		if (SecretWord[i] == GuessLetter)
		{
			ShowWord[i] = GuessLetter;
		}
	}

	string::size_type idx = SecretWord.find(GuessLetter);
	if (idx != string::npos)
	{
		cout << "\nYou guess a right letter" << endl;
	}
	else
	{
		cout << "\nYou guess a wrong letter" << endl;
		CurLife = CurLife - 1;
	}
	//print true/false guessed letter
	for (int i = 0; i < ShowWord.length(); i++)
	{
		cout << " " << ShowWord[i] << " ";
	}
}
